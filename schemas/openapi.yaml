openapi: 3.0.0
info:
  version: 1.0.0
  title: Book database API
  description: A simple back-end book database API.
  contact:
    name: Sadat Rahman
    email: rahmans22@uni.coventry.ac.uk
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://presentjoin-enjoyjudge-3000.codio-box.uk/api/v1'
    description: Development server
tags:
  - name: Users
    description: Perform CRUD operations on users.
  - name: Books
    description: Perform CRUD operations on books.
  - name: Authors
    description: Perform CRUD operations on authors.
  - name: Genres
    description: Perform CRUD operations on genres.
  - name: Reviews
    description: Perform CRUD operations on reviews.
paths:
  /users:
    summary: Represents an individual user
    description: >
      This resource represents an individual user in the system.
      Each user is identified by a numeric `id`.
    get:
      tags:
        - Users
      description: Get all users.
      responses:
        '200':
          description: View of all users.
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userGetAll
        '404':
          description: No users found.
        '401':
          description: Authentication is required to view all users.
        '403':
          description: Non-admin users cannot view all user records.
    post:
      tags:
        - Users
      description: Create a new user.
      requestBody:
        description: New user data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./user.json#/definitions/user
      responses:
        '201':
          description: User created.
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userCreated
        '400':
          description: User creation failed because of unknown issue.
  /users/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: ID number of user
    get:
      tags:
        - Users
      description: Get user by ID.
      responses:
        '200':
          description: View of a user.
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userGet
        '404':
          description: User not found.
        '401':
          description: Authentication is required to view a user.
        '403':
          description: Non-admin users can only view their own user record.
    put:
      tags:
        - Users
      description: Update user by ID.
      requestBody:
        description: Updated user data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./user.json#/definitions/userUpdate
      responses:
        '200':
          description: User updated.
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userCreated
        '404':
          description: User not found.
        '401':
          description: Authentication is required to update a user.
        '403':
          description: Non-admin users can only update their own user record.
        '400':
          description: User update failed because of unknown issue.
    delete:
      tags:
        - Users
      description: Delete user by ID.
      responses:
        '200':
          description: User deleted.
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userDeleted
        '404':
          description: User not found.
        '401':
          description: Authentication is required to delete a user.
        '403':
          description: Non-admin users cannot delete user records.
        '400':
          description: User deletion failed because of unknown issue.
  /books:
    get:
      tags:
        - Books
      description: Get all books.
      responses:
        '200':
          description: View of all books.
        '404':
          description: No books found.
    post:
      tags:
        - Books
      description: Create a new book.
      requestBody:
        description: New book data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./book.json#/definitions/book
      responses:
        '201':
          description: Book created.
          content:
            application/json:
              schema:
                $ref: ./book.json#/definitions/bookCreated
        '401':
          description: Authentication is required to create a book.
        '403':
          description: Non-admin users cannot create books.
        '400':
          description: Book creation failed because of unknown issue.
  /books/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: ID number of book
    get:
      tags:
        - Books
      description: Get book by ID.
      responses:
        '200':
          description: View of a book.
        '404':
          description: Book not found.
    put:
      tags:
        - Books
      description: Update book by ID.
      requestBody:
        description: Updated book data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./book.json#/definitions/bookUpdate
      responses:
        '200':
          description: Book updated.
          content:
            application/json:
              schema:
                $ref: ./book.json#/definitions/bookUpdated
        '404':
          description: Book not found.
        '401':
          description: Authentication is required to update a book.
        '403':
          description: Non-admin users cannot update books.
        '400':
          description: Book update failed because of unknown issue.
    delete:
      tags:
        - Books
      description: Delete book by ID.
      responses:
        '200':
          description: Book deleted.
          content:
            application/json:
              schema:
                $ref: ./book.json#/definitions/bookDeleted
        '404':
          description: Book not found.
        '401':
          description: Authentication is required to delete a book.
        '403':
          description: Non-admin users cannot delete books.
        '400':
          description: Book deletion failed because of unknown issue.
  /genres:
    get:
      tags:
        - Genres
      description: Get all genres.
      responses:
        '200':
          description: View of all genres.
        '404':
          description: No genres found.
    post:
      tags:
        - Genres
      description: Create a new genre.
      requestBody:
        description: New genre data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./genre.json#/definitions/genre
      responses:
        '201':
          description: Genre created.
          content:
            application/json:
              schema:
                $ref: ./genre.json#/definitions/genreCreated
        '401':
          description: Authentication is required to create a genre.
        '403':
          description: Non-admin users cannot create genres.
        '400':
          description: Genre creation failed because of unknown issue.
  /genres/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: ID number of genre
    get:
      tags:
        - Genres
      description: Get genre by ID.
      responses:
        '200':
          description: View of a genre.
        '404':
          description: Genre not found.
    put:
      tags:
        - Genres
      description: Update genre by ID.
      requestBody:
        description: Updated genre data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./genre.json#/definitions/genreUpdate
      responses:
        '200':
          description: Genre updated.
          content:
            application/json:
              schema:
                $ref: ./genre.json#/definitions/genreUpdated
        '404':
          description: Genre not found.
        '401':
          description: Authentication is required to update a genre.
        '403':
          description: Non-admin users cannot update genres.
        '400':
          description: Genre update failed because of unknown issue.
    delete:
      tags:
        - Genres
      description: Delete genre by ID.
      responses:
        '200':
          description: Genre deleted.
          content:
            application/json:
              schema:
                $ref: ./genre.json#/definitions/genreDeleted
        '404':
          description: Genre not found.
        '401':
          description: Authentication is required to delete a genre.
        '403':
          description: Non-admin users cannot delete genres.
        '400':
          description: Genre deletion failed because of unknown issue.
  /authors:
    get:
      tags:
        - Authors
      description: Get all authors.
      responses:
        '200':
          description: View of all authors.
        '404':
          description: No authors found.
    post:
      tags:
        - Authors
      description: Create a new author.
      requestBody:
        description: New author data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./author.json#/definitions/author
      responses:
        '201':
          description: Author created.
          content:
            application/json:
              schema:
                $ref: ./author.json#/definitions/authorCreated
        '401':
          description: Authentication is required to create an author.
        '403':
          description: Non-admin users cannot create authors.
        '400':
          description: Author creation failed because of unknown issue.
  /authors/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: ID number of author
    get:
      tags:
        - Authors
      description: Get author by ID.
      responses:
        '200':
          description: View of an author.
        '404':
          description: Author not found.
    put:
      tags:
        - Authors
      description: Update author by ID.
      requestBody:
        description: Updated author data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./author.json#/definitions/authorUpdate
      responses:
        '200':
          description: Author updated.
          content:
            application/json:
              schema:
                $ref: ./author.json#/definitions/authorUpdated
        '404':
          description: Author not found.
        '401':
          description: Authentication is required to update an author.
        '403':
          description: Non-admin users cannot update authors.
        '400':
          description: Author update failed because of unknown issue.
    delete:
      tags:
        - Authors
      description: Delete author by ID.
      responses:
        '200':
          description: Author deleted.
          content:
            application/json:
              schema:
                $ref: ./author.json#/definitions/authorDeleted
        '404':
          description: Author not found.
        '401':
          description: Authentication is required to delete an author.
        '403':
          description: Non-admin users cannot delete authors.
        '400':
          description: Author deletion failed because of unknown issue.
  /reviews:
    get:
      tags:
        - Reviews
      description: Get all reviews.
      responses:
        '200':
          description: View of all reviews.
        '404':
          description: No reviews found.
    post:
      tags:
        - Reviews
      description: Create a new review.
      requestBody:
        description: New review data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./review.json#/definitions/review
      responses:
        '201':
          description: Review created.
          content:
            application/json:
              schema:
                $ref: ./review.json#/definitions/reviewCreated
        '401':
          description: Authentication is required to create a review.
        '403':
          description: Only non-admin users can create reviews.
        '400':
          description: Review creation failed because of unknown issue.
  /reviews/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: ID number of review
    get:
      tags:
        - Reviews
      description: Get review by ID.
      responses:
        '200':
          description: View of a review.
        '404':
          description: Review not found.
    put:
      tags:
        - Reviews
      description: Update review by ID.
      requestBody:
        description: Updated review data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./review.json#/definitions/reviewUpdate
      responses:
        '200':
          description: Review updated.
          content:
            application/json:
              schema:
                $ref: ./review.json#/definitions/reviewUpdated
        '404':
          description: Review not found.
        '401':
          description: Authentication is required to update a review.
        '403':
          description: Non-admin users can only update their own reviews.
        '400':
          description: Review update failed because of unknown issue.
    delete:
      tags:
        - Reviews
      description: Delete review by ID.
      responses:
        '200':
          description: Review deleted.
          content:
            application/json:
              schema:
                $ref: ./review.json#/definitions/reviewDeleted
        '404':
          description: Review not found.
        '401':
          description: Authentication is required to delete a review.
        '403':
          description: Non-admin users can only delete their own reviews.
        '400':
          description: Review deletion failed because of unknown issue.